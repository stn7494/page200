<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ez.en.page.campingMapper">

	
	<!-- 캠핑장 등록 (관리자용 페이지의 CampingDTO로 파라미터 타입 변경)-->
	<insert id="register" parameterType="CampingDTO"> 
		INSERT INTO camping (cam_code, region_code, cam_name, cam_address, cam_tel, cam_start_time, cam_finish_time, 
							thema_code, option_code, cam_hide, cam_regdate)
		VALUES (#{cam_code}, #{region_code}, #{cam_name}, #{cam_address}, #{cam_tel}, #{cam_start_time}, #{cam_finish_time}, 
				#{thema_code}, #{option_code}, #{cam_hide}, now())
	</insert>

	<!-- 캠핑장 수정 -->
	<update id="modify" parameterType="CampingDTO">
		UPDATE camping 
		SET cam_code=#{cam_code}, region_code=#{region_code}, cam_name=#{cam_name}, cam_address=#{cam_address}, cam_tel=#{cam_tel}, 
			cam_start_time=#{cam_start_time}, cam_finish_time=#{cam_finish_time}, thema_code=#{thema_code}, option_code=#{option_code}, 
			cam_hide=#{cam_hide}, cam_regdate=now()
		WHERE cam_code=#{cam_code}
	</update>

	<!-- 캠핑장 삭제 -->
	<delete id="remove" parameterType="String">
		DELETE FROM camping WHERE cam_code=#{cam_code}
	</delete>


	<!-- 캠핑장 전체 조회(내림차순)  -->
	<select id="list" resultType="CampingDTO">
		SELECT * FROM camping order by cam_code desc
	</select>
	
	<!-- 캠핑장 상세페이지 -->
	<select id="detail" resultType="CampingDTO">
		SELECT * FROM camping WHERE cam_code = #{cam_code}
	</select>	
	
		<!-- 캠핑장 수 조회 -->
	<select id="countPaging" resultType="int">
		<![CDATA[
		select count(cam_code) 
		from camping
		where cam_code > 'cam000'
		]]>
	</select>
	
	<!-- 캠핑장 페이징처리 (cam_address 조회) -->
	<select id="listPage" resultType="CampingDTO">
		<![CDATA[
			SELECT * FROM camping 
			WHERE cam_code > 'cam000'
			order by cam_code desc 
			limit #{page}, 10 ;
		]]>
	</select>
	
	<select id="listCriteria" resultType="CampingDTO">
		<![CDATA[
		SELECT * FROM camping
		WHERE cam_code > 'cam000'
		order by cam_code desc 
		limit #{pageStart}, #{perPageNum} ;
		]]>
	</select>
	
	<!-- 캠핑장 검색 처리 -->
	<select id="listSearch" resultType="CampingDTO">
		<![CDATA[
		 SELECT *
		 FROM camping
		 WHERE cam_code > 'cam000'
		]]>
	
		<include refid="search"></include>
		
		<![CDATA[
			order by cam_code desc
			limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<!-- 캠핑장 개수 조회 -->
	<select id="listSearchCount" resultType="int">
		<![CDATA[
		 SELECT count(cam_code)
		 FROM camping
		 WHERE cam_code > 'cam000'
		]]>
		<include refid="search"></include>
	</select>
	
		<!-- 검색기능 추가 (sql분리) -->
	<sql id="search">
		<if test="searchType != null and searchType.length > 0">
			<if test="searchType == 'c'.toString()">
				and cam_name like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'r'.toString()">
				and cam_address like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'q'.toString()">
				and(cam_name like CONCAT('%', #{keyword}, '%') OR cam_address like CONCAT('%', #{keyword}, '%'))
			</if>
		</if>
	</sql>
	
	
	
	
	
	<!-- ====================================== -->
	
	<!-- 캠핑장(상세페이지) 정보 조회 -->	
	<select id="selectAll" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT camping.*, camping_rev_info.* 
		FROM camping, camping_rev_info 
		WHERE camping.cam_code = camping_rev_info.cam_code
	</select>
	

	<!-- 현재 날짜 조회 -->
	<select id="selectTime" resultType="String">
		select now()
	</select>
	

	
	<!-- 최신 등록 캠핑장 코드 조회 -->
	<select id="selectMaxCode" resultType="int">
		select MAX(cam_code) from camping
	</select>
	

</mapper>